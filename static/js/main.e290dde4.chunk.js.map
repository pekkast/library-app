{"version":3,"sources":["AddBookDialog.tsx","BookTable.tsx","utils.ts","App.tsx","index.tsx"],"names":["AddBookDialog","onSave","useState","open","setOpen","writer","setWriter","title","setTitle","isbn","setIsbn","error","setError","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onBlur","e","target","value","DialogActions","BookTable","books","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","map","book","scope","sortByWriter","sort","a","b","toLowerCase","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","App","classes","fileInput","useRef","undefined","setBooks","CssBaseline","AppBar","position","Toolbar","className","Typography","noWrap","Container","maxWidth","align","gutterBottom","paragraph","Grid","container","justify","item","ref","onChange","list","callback","reader","FileReader","onload","JSON","parse","result","readAsText","parseBooks","files","accept","style","display","current","click","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e290dde4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { BookItem } from './models';\n\nexport type AddBookDialogProps = {\n    onSave: (book: BookItem) => void;\n}\n\nexport default function AddBookDialog({ onSave }: AddBookDialogProps) {\n  const [open, setOpen] = useState(false);\n\n  const [writer, setWriter] = useState('');\n  const [title, setTitle] = useState('');\n  const [isbn, setIsbn] = useState('');\n  const [error, setError] = useState<{[key: string]: boolean;}>({})\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    if (!writer) {\n        setError({ writer: true });\n        return;\n    }\n    if (!title) {\n        setError({ title: true });\n        return;\n    }\n    if (!isbn) {\n        setError({ isbn: true });\n        return;\n    }\n    setError({});\n    onSave({ writer, title, isbn });\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Add book\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add book</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add new book. Fill all fields.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"writer\"\n            label=\"Writer\"\n            type=\"text\"\n            error={error.writer}\n            fullWidth\n            onBlur={(e) => setWriter(e.target.value)}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            error={error.title}\n            fullWidth\n            onBlur={(e) => setTitle(e.target.value)}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"isbn\"\n            label=\"ISBN\"\n            type=\"text\"\n            error={error.isbn}\n            fullWidth\n            onBlur={(e) => setIsbn(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { BookItem } from './models';\n\nexport type BookTableProps = {\n    books: BookItem[];\n}\n\nexport default function BookTable({ books }: BookTableProps) {\n    return (\n      <TableContainer component={Paper}>\n        <Table size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Writer</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>ISBN</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {books.map((book) => (\n              <TableRow key={book.isbn}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {book.writer}\n                </TableCell>\n                <TableCell>{book.title}</TableCell>\n                <TableCell>{book.isbn}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }","import { BookItem } from './models';\n\nexport const sortByWriter = (books: BookItem[]): BookItem[] => {\n  return books.sort((a, b) =>\n    a.writer.toLowerCase() > b.writer.toLowerCase() ? 1 : -1\n  );\n};\n\nexport const parseBooks = (\n  list: FileList | null,\n  callback: (value: BookItem[]) => void\n): void => {\n  if (!list) {\n    return;\n  }\n\n  const file = list.item(0);\n\n  if (!file) {\n    return;\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e: ProgressEvent<FileReader>) => {\n    const books: BookItem[] = JSON.parse((e.target?.result as string) || \"[]\");\n    callback(books);\n  };\n\n  reader.readAsText(list[0]);\n};\n","import {\n  AppBar, Button, Container, CssBaseline, Grid,\n  Toolbar, Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BooksIcon from '@material-ui/icons/LibraryBooks';\nimport { ChangeEvent, useRef, useState } from 'react';\nimport AddBookDialog from './AddBookDialog';\nimport BookTable from './BookTable';\nimport { BookItem } from './models';\nimport { parseBooks, sortByWriter } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const [books, setBooks] = useState<BookItem[]|undefined>(undefined);\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    parseBooks(e.target.files, setBooks)\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <BooksIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Library app\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"md\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Library catalog\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              {books === undefined ? 'Setup library catalog' : 'Work with library catalog'}\n            </Typography>\n            <div className={classes.heroButtons}>\n              {books === undefined && (\n                <Grid container spacing={2} justify=\"center\">                \n                  <Grid item>\n                    <input type=\"file\" ref={fileInput} onChange={handleInputChange} accept=\"application/json\" style={{display:'none'}} />\n                    <Button type=\"button\" onClick={() => fileInput.current?.click()}>Give initial list of books</Button>\n                  </Grid>\n                  <Grid item>                  \n                    <Button type=\"button\" onClick={() => setBooks([])}>Start from scratch</Button>\n                  </Grid>\n                </Grid>\n              )}\n              {books !== undefined && (\n                <Grid container spacing={2} justify=\"center\">\n                  <Grid item>\n                    <AddBookDialog onSave={(book: BookItem) => setBooks(books.concat(book))} />\n                  </Grid>\n                </Grid>\n              )}\n            </div>\n          </Container>\n        </div>\n        {books !== undefined && (\n          <Container maxWidth=\"md\">\n            <BookTable books={sortByWriter(books)} />\n          </Container>\n        )}\n      </main>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}